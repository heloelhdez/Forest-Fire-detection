x<-1
print(x)
x
x<=11:30
x<-11:30
x
x
1/Inf
0/0
attributes(1)
attributes("as")
attributes([1])
attributes(OKa)
x <- c(0.3,1,0.22)
x
x <- 0.3,1,0.22
x <- 0.3 1 0.22
x <- c(0.3 1 0.22)
x <- c(0.3,1,0.22)
x
x <- c(TRUE, T)
X
x
x <- 8:10
x
x <- vector("numeric", length = 100)
x
x <- vector("numer", length = 100)
y <- c(1.7, "a")
y
y <- c(True, 2)
y <- c(True, "2")
x <- 0:6
class(x)
x <- 0.1:6.8
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x <- 0.1:6.8
x
x <- 0.1:6
x
x <- 0.1:6.1
x
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
a <- c(.21,.16,.02)
b<-c(.16,.22)
suma<-sum(a)
sumb<-sum(b)
pab<-suma*sumb
pab/sumb
(pab*suma)/sumb
pab
.16/sumb
choose(100,5)
5/100
choose(50, 5) / choose(100, 5)
pa<-5/50
pb<-5/100
pa/pb
pa
pb
ab*pb
pa*pb
1081/38412
1/((2Pi))
1/((2PI))
1/((2*PI))
1/((2*Pi))
1/((2*pi))
pi
1/((2*pi)^(0.5))
.95/4
(.95/4)+0.68
(.95-.68)/2
.68+0.135
install.packages(c("curl", "jsonlite", "R6", "stringi"))
se<-0.17*(1-0.17)
se<-se/100
se<-se^0.5
.17-(1.96*.038)
.17+(1.96*.038)
ConfidenceL<-3.8-1.96*(0.8/((25)^0.5)
as
ConfidenceL<-3.8-1.96*(0.8/((25)^0.5)
as
confidenceL<-3.8-1.96*(0.8/((25)^0.5)
c
confidenceL<-3.8-1.96*(0.8/((25)^0.5))
confidenceH<-3.8+1.96*(0.8/((25)^0.5))
confidenceH<-3.8+((1.96)*(0.8/((25)^0.5)))
confidenceH<-3.8+((1.96)*(0.8/(25^0.5))
)
confidenceH<-3.8+((1.96)*(0.8/25^0.5)
)
confidenceH<-3.8+1.96*0.8/25^0.5
confidenceH<-3.8+1.96*0.8/150^0.5
confidenceL<-3.8-1.96*(0.8/((150)^0.5))
confidenceL<-.77-2.58*sqrt(0.77*(1-.77)/55)
confidenceH<-.77+2.58*sqrt(0.77*(1-.77)/55)
confidenceL<-2.1-1.671*1.5/sqrt(88)
confidenceH<-2.1+1.671*1.5/sqrt(88)
confidenceL<-2.1-(1.671*(1.5/sqrt(88)))
confidenceL<-2.1-1.671*1.5/sqrt(88)
2.1 - 1.671 * 0.5 / sqrt(88)
confidenceL<-2.1-1.671*0.5/sqrt(88)
confidenceH<-2.1+1.671*0.5/sqrt(88)
n<-(0.5*(1-0.5))/((0.1^1))
n<-(0.5*(1-0.5))/((0.1^2))
n<-(0.5*(1-0.5)*1.65^2)/((0.1^2))
(42.9+53.3+59.92+81+75.56)/5
val<-c(42.9,53.3,59.92,81,75.56)
mean(val)
median(val)
mode(val)
val<-c(47,46,45,44,44,40,39,41,41,42)
mean(val)
val<-c(42.9,53.3,59.92,81,75.56)
mean(val)
library(readr)
datosAnalisis <- read_csv("~/Base10/datos/datosAnalisis.csv")
View(datosAnalisis)
datosAnalisis
table(datosAnalisis)
datosAnalisis$id
length(datosAnalisis)
length(datosAnalisis$id)
sum(datosAnalisis$angry_count)
sum(datosAnalisis$angry_count)
sum(datosAnalisis$comments_count)
sum(datosAnalisis$shares_count)
sum(datosAnalisis$love_count)
sum(datosAnalisis$comments_count,datosAnalisis$shares_count)
sum(datosAnalisis$love_count,datosAnalisis$haha_count,datosAnalisis$wow_count,datosAnalisis$sad_count,datosAnalisis$angry_count)
sum(datosAnalisis$love_count)
sum(datosAnalisis$comments_count)
sum(datosAnalisis$shares_count)
min(datosAnalisis$love_count)
typeof(datosAnalisis)
typeof(datosAnalisis$sad_count)
typeof(datosAnalisis$message)
typeof(datosAnalisis$sad_count, na.rm=TRUE)
sum(datosAnalisis$sad_count, na.rm=TRUE)
days<-weekdays(datosAnalisis$created_time)
days
day<- strftime(datosAnalisis$created_time,'%A')
day
factor(datosAnalisis$created_time)
diasyhoras<-data.frame()
diasyhoras<-data.frame(dia=weekdays(datosAnalisis$created_time), hora=format(datosAnalisis$created_time, format = "%H")
)
diasyhoras
levels(diasyhoras)
unique(diasyhoras)
catDiasyHoras<-unique(diasyhoras)
catDiasyHoras
catDiasyHoras[0]
catDiasyHoras[1]
catDiasyHoras[1][1]
catDiasyHoras[[1]]
catDiasyHoras[1]
catDiasyHoras[1][1]
catDiasyHoras[1][1][1]
catDiasyHoras[1]
catDiasyHoras[[1]]
catDiasyHoras[1]
View(catDiasyHoras)
catDiasyHoras[1]
typeof(catDiasyHoras)
library(purrr)
catDiasyHoras[[1]][1]
catDiasyHoras[1][1]
catDiasyHoras[[1]][[1]]
catDiasyHoras[[1]][1]
catDiasyHoras[[1]][2]
catDiasyHoras[[1]][2]
catDiasyHoras[[1]][1]
catDiasyHoras[[1]]
catDiasyHoras[[2]][1]
catDiasyHoras[[3]][1]
catDiasyHoras[[1]]
catDiasyHoras[[2]][1]
catDiasyHoras
catDiasyHoras[[1]][1]
diasyhoras<-data.frame(dia=weekdays(datosAnalisis$created_time), hora=format(datosAnalisis$created_time, format = "%H"), interracion=0)
diasyhoras
diasyhoras<-data.frame(dia=weekdays(datosAnalisis$created_time), hora=format(datosAnalisis$created_time, format = "%H"), interacion=0)
diasyhoras
catDiasyHoras[[3]][1]
diasyhoras<-data.frame(dia=weekdays(datosAnalisis$created_time), hora=format(datosAnalisis$created_time, format = "%H"), interacion=0)
catDiasyHoras<-unique(diasyhoras)
catDiasyHoras[[1]][1]
catDiasyHoras[[3]][1]
catDiasyHoras[[2]][1]
diasyhoras<-data.frame(dia=weekdays(datosAnalisis$created_time), hora=format(datosAnalisis$created_time, format = "%H"), comentarios=0, shares=0, reacciones=0, total=0)
catDiasyHoras<-unique(diasyhoras)
catDiasyHoras[[1]][1]
catDiasyHoras
for(dia in catDiasyHoras){
print(paste("Estoy en", dia))
}
print( dia)
for(dia in catDiasyHoras$dia){
print( dia)
}
source('~/Base10/heloel.r', echo=TRUE)
source('~/Base10/heloel.r', echo=TRUE)
for(dia in catDiasyHoras){
print( dia)
}
for(dia in catDiasyHoras){
print( dia)
}
for(dia in catDiasyHoras$dia){
print( dia)
}
cont<-0
for(dia in catDiasyHoras$dia){
print(cont)
cont<-cont+1
}
length(catDiasyHoras)
length(catDiasyHoras$dia)
for(dia in catDiasyHoras$dia){
print(cont)
cont<-cont+1
}
cont<-1
for(dia in catDiasyHoras$dia){
print(cont)
cont<-cont+1
}
length(catDiasyHoras$dia)
cont<-1
while(datosAnalisis){
print(cont)
cont<-cont+1
}
while(datosAnalisis$dia){
print(cont)
cont<-cont+1
}
library(magrittr)
c("data.table", "dplyr","tidyr","lubridate","vegetarian","vegan",
"lattice","ggplot2", "purrr","lme4", "xts","reshape2","Rfacebook",
"dygraphs") %>%
sapply(require, character.only=T)
c("data.table", "dplyr","tidyr","lubridate","vegetarian","vegan",
"lattice","ggplot2", "purrr","lme4", "xts","reshape2","Rfacebook",
"dygraphs") %>%
sapply(require, character.only=T)
install.packages("dplyr")
install.packages("tidyr")
install.packages("lubridate")
install.packages("vegetarian")
install.packages("vegan")
install.packages("lattice")
install.packages("lattice")
install.packages("ggplot2")
install.packages("purrr")
install.packages("lme4")
install.packages("xts")
install.packages("reshape2")
install.packages("Rfacebook")
install.packages("dygraphs")
grittr)
c("data.ta
c("data.table", "dplyr","tidyr","lubridate","vegetarian","vegan",
"lattice","ggplot2", "purrr","lme4", "xts","reshape2","Rfacebook",
"dygraphs") %>%
sapply(require, character.only=T)
library(magrittr)
c("data.table", "dplyr","tidyr","lubridate","vegetarian","vegan",
"lattice","ggplot2", "purrr","lme4", "xts","reshape2","Rfacebook",
"dygraphs") %>%
sapply(require, character.only=T)
install.packages("data.table")
library(magrittr)
c("data.table", "dplyr","tidyr","lubridate","vegetarian","vegan",
"lattice","ggplot2", "purrr","lme4", "xts","reshape2","Rfacebook",
"dygraphs") %>%
sapply(require, character.only=T)
while(datosAnalisis$dia){
print(cont)
cont<-cont+1
}
horaCorrecta<-function(hora){
temp<-hora-6
if(temp<0){
regresa<-24-temp
return(regresa)
}
else{
return(temp)
}
}
horaCorrecta(6)
horaCorrecta(3)
horaCorrecta<-function(hora){
temp<-hora-6
if(temp<0){
regresa<-24+temp
return(regresa)
}
else{
return(temp)
}
}
horaCorrecta(3)
horaCorrecta(2)
horaCorrecta(0)
horaCorrecta(23)
horaCorrecta(0)
horaCorrecta(6)
capExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <-gsub("(^|[ ])([a-z])", "\\1\\U\\2", palabras, perl=T)
palabras
}
capExp(prueba)
prueba <- "hola"
pruebas <- "hola, como estas? yo estoy muy bien. JIOJO"
capExp(prueba)
capExp(pruebas)
capExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <-gsub("(^)", "\\1\\U\\2", palabras, perl=T)
palabras
}
capExp(prueba)
capExp(pruebas)
capExp(prueba)
capExp(pruebas)
capExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <-gsub("(^|[ ])([a-z])", "\\1\\U\\2", palabras, perl=T)
palabras
}
capExp(prueba)
capExp(pruebas)
capExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <-gsub("[a-z]", "\\1\\U\\2", palabras, perl=T)
palabras
}
capExp(prueba)
capExp(pruebas)
capExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <-gsub("([a-z])", "\\1\\U\\2", palabras, perl=T)
palabras
}
capExp(prueba)
capExp(pruebas)
capExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <-gsub("(^|[ ])([a-z])", "\\1\\U\\2", palabras, perl=T)
palabras
}
capExp(prueba)
capExp(pruebas)
capitaliza <- function(palabras){
palabras <- strsplit(palabras, "\\s+") [[1]]
palabras <- lapply(palabras, capitalizaExp)
palabras <- paste(palabras, collapse = ' ')
palabras
}
capitalizaExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <- sub("([a-zA-z])", "\\U\\1", palabras, perl=T)
palabras
}
prueba <- "hola"
pruebas <- "hola, como estas? yo estoy muy bien. JIOJO"
capitaliza(pruebas)
capitaliza(prueba)
capitalizaExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <- sub("([a-zA-z])", "\\U\\1", palabras, perl=T)
palabras
}
capitalizaExp(pruebas)
capitalizaExp(prueba)
capExp <- function(palabras){
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras <-gsub("(^|[ ])([a-z])", "\\1\\U\\2", palabras, perl=T)
palabras
}
prueba <- "hola"
pruebas <- "hola, como estas? yo estoy muy bien. JIOJO"
capExp(prueba)
capExp(pruebas)
x <- "Esto es una prueba             genial"
gsub("[[:space:]]", "", x)
x <- c("gato", "pato", "cabra", "pez")
agrep("ga", x)
agrep("ga", x, max.distance = 0.2)
agrep("ga", x, max.distance = 0.5)
agrep("gat", x, max.distance = 0.5)
x <- c("gato", "pato", "cabra", "pez")
x
agrep
agrep("p", x, max.distance = 0.5)
agrep("p", x, max.distance = 0.1)
agrep("p", x, max.distance = 0.9)
agrep("pa", x, max.distance = 0.9)
?agrep
agrep("lasy", "1 lazy 2")
agrep("lasy", c(" 1 lazy 2", "1 lasy 2"), max = list(sub = 0))
agrep("pue", x, max.distance = 0.9)
x <- c("puebla", "michoacan", "guerrero", "baja california")
agrep("pue", x, max.distance = 0.9)
agrep("pue", x, max.distance = 0.1)
agrep("pue", x, max.distance = 0.01)
agrep("pueb", x, max.distance = 0.01)
rmarkdown::shiny_prerendered_clean('D:/Verano 17/B10/Reporte16jun17.tex')
capitaliza <- function(palabras){
vector <- c("el", "la", "los", "las", "un", "uno", "unos", "una", "unas", "lo", "la", "al", "del", "de", "yo", "tu", "ella", "ellos", "ellas")
palabras <- strsplit(palabras, "\\s+") [[1]]
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras2 <- list()
for(i in seq_along(palabras)){
palabras[i] <- esta(palabras[i], vector)
}
# #Para la primera palabra
palabras[1] <- sub("([a-zA-z])", "\\U\\1", palabras[1], perl=T)
palabras <- paste(palabras, collapse = ' ')
palabras
}
esta <- function(cadena, vect){
if(cadena %in% vect){
cadena
}
else{
sub("([a-zA-z])", "\\U\\1", cadena, perl=T)
}
}
prueba <- "hola"
pruebas <- "el hola, el como estas? yo estoy muy bien. JIOJO uno unos asdsad AASDDS"
capitaliza(pruebas)
esta <- function(cadena, vect){
if(length(cadena) == 2){
cadena
}
else{
sub("([a-zA-z])", "\\U\\1", cadena, perl=T)
}
}
capitaliza <- function(palabras){
vector <- c("el", "la", "los", "las", "un", "uno", "unos", "una", "unas", "lo", "la", "al", "del", "de", "yo", "tu", "ella", "ellos", "ellas")
palabras <- strsplit(palabras, "\\s+") [[1]]
palabras <- gsub("([a-zA-z])", "\\L\\1", palabras, perl=T)
palabras2 <- list()
for(i in seq_along(palabras)){
palabras[i] <- esta(palabras[i], vector)
}
# #Para la primera palabra
palabras[1] <- sub("([a-zA-z])", "\\U\\1", palabras[1], perl=T)
palabras <- paste(palabras, collapse = ' ')
palabras
}
prueba <- "hola"
pruebas <- "el hola, el como estas? yo estoy muy bien. JIOJO uno unos asdsad AASDDS"
capitaliza(pruebas)
length("gato")
length(strsplit("gato", ""))
length(unlist(strsplit("gato", "")))
setwd("D:\onceavo\sistemas")
setwd("D:\")
setwd("D:\")
setwd("D:")
getwd()
setwd(D:)
setwd("D:\onceavo\sistemas")
setwd("D:/onceavo/sistemas")
getwd()
library(imager)
install.packages("imager")
library(imager)
readBin(con = "si/398309.jpg",what = "raw")
imagen <- readBin(con = "si/398309.jpg",what = "raw")
imagen
plot(imagen)
setwd("D:/onceavo/sistemas/si")
imagen <- readBin(con = "398309.jpg",what = "raw")
imagen
plot(imagen)
imagen <- load.image("398309.jpg")
imagen
plot(imagen)
